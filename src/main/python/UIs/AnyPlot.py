# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AnyPlot.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AnyPlotter(object):
    def setupUi(self, AnyPlotter):
        AnyPlotter.setObjectName("AnyPlotter")
        AnyPlotter.resize(575, 455)
        AnyPlotter.setStyleSheet("\n"
"QMainWindow{\n"
"background-color:rgb(20, 20, 20);\n"
"color: rgb(98, 114, 164);\n"
"}\n"
"\n"
"\n"
"QScrollBar{\n"
"/*background-color:rgb(56,58,89);*/\n"
"background-color:rgb(30,30,30);\n"
"}\n"
"\n"
"QFrame{\n"
"/*background-color: rgb(56,58,89);*/\n"
"background-color: rgb(30,30,30);\n"
"/*border: 2px solid rgb(220,220,220);*/\n"
"/*border: 2px solid rgb(143, 23, 119);*/\n"
"border: 2px solid rgb(98, 114, 164);\n"
"/*border: 2px solid rgb(56,58,89);*/\n"
"\n"
"\n"
"border-radius:10px;\n"
"\n"
"}\n"
"\n"
"QLabel{\n"
"color:rgb(98, 114, 164);\n"
"border: 0px;\n"
"}\n"
"\n"
"QRadioButton{\n"
"color: rgb(98, 114, 164);\n"
"\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    background-color: rgb(30,30,30);\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"   background-color: rgb(143,23,119);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    background-color:  rgb(98, 114, 164);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    background-color: rgb(143,23,119);\n"
"}\n"
"\n"
"/*\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"*/\n"
"\n"
"\n"
"/* IMPORTANT: 8< Add the code above here 8< */\n"
"QTabBar::tab:selected {\n"
"/* expand/overlap to the left and right by 4px */\n"
"margin-left: -4px;\n"
"margin-right: -4px;\n"
"}\n"
"QTabBar::tab:first:selected {\n"
"margin-left: 0; /* the first selected tab has nothing to overlap with on the left */\n"
"}\n"
"QTabBar::tab:last:selected {\n"
"margin-right: 0; /* the last selected tab has nothing to overlap with on the right */\n"
"}\n"
"QTabBar::tab:only-one {\n"
"margin: 0; /* if there is only one tab, we don\'t want overlapping margins */\n"
"}\n"
"\n"
"QTabWidget::pane { /* The tab widget frame */\n"
"/*border-top: 2px solid #C2C7CB;*/\n"
"\n"
"/*border-top:4px solid rgb(56,58,89);*/\n"
"border-top:4px solid rgb(30,30,30);\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"left: 5px; /* move to the right by 5px */\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"/*border: 2px solid rgb(98, 114, 164);\n"
"\n"
"border-bottom-color: rgb(98, 114, 164);*/\n"
"border: 2px solid rgb(40, 40, 40);\n"
"\n"
"border-bottom-color: rgb(143, 23, 119);\n"
"border-top-left-radius: 4px;\n"
"border-top-right-radius: 4px;\n"
"min-width: 8ex;\n"
"padding: 2px;\n"
"color:rgb(143, 23, 119);\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected, QTabBar::tab:hover {\n"
"/*background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #fafafa, stop: 0.4 #f4f4f4, stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);*/\n"
"background-color:rgb(42,42,42);\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"/*border-color: #9B9B9B;*/\n"
"\n"
"    border-color: rgb(143, 23, 119);\n"
"    border-bottom-color:  rgb(143,23,119);\n"
"    border-width: 3px;\n"
"    color:rgb(20,20,20);\n"
"    background-color: rgb(143,23,119);\n"
"\n"
"}\n"
"QTabBar::tab:!selected {\n"
"margin-top: 2px; /* make non-selected tabs look smaller */\n"
"}\n"
"\n"
"\n"
"QPushButton {\n"
"    /*background-color:rgb(98, 114, 164);*/\n"
"    background-color: rgb(30,30,30);\n"
"    color: rgb(143,23,119);\n"
"    \n"
"\n"
"}\n"
"\n"
"QPushButton:hover\n"
"{\n"
"       background-color: rgb(40, 40, 40);\n"
"    /*color:rgb(20,20,20);*/\n"
"    border-style: outset;\n"
"    border-width: 2px;\n"
"    border-color: rgb(143,23,119);\n"
"\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    color: rgb(143, 23, 119);\n"
"    background-color: rgb(20, 20, 20);\n"
"}\n"
"\n"
"QTableView{\n"
"border:None;\n"
"}\n"
"\n"
"QListWidget{\n"
"border:None;\n"
"margin-top:5px;\n"
"margin-left:5px;\n"
"margin-right:5px;\n"
"\n"
"\n"
"background-color: rgb(30,30,30);\n"
"\n"
"color:rgb(98, 114, 164);\n"
"\n"
"}\n"
"\n"
"/* Works for both QListView and QListWidget */\n"
"QListView::item {\n"
"    /* Won\'t work without borders set */\n"
"    padding-left:1px;\n"
"    padding-right:10px;\n"
"    padding-top:1px;\n"
"    padding-bottom:1px;\n"
"}\n"
"QListView::item:hover{\n"
"/*background-color: rgb(143,23,119);*/\n"
"border: 1px solid rgb(143, 23, 119);\n"
"border-style: outset;\n"
"background-color: rgb(40,40,40);\n"
"padding-left:5px;\n"
"padding-right:-10px;\n"
"}\n"
"\n"
"QListView::item:selected{\n"
"color: rgb(20,20,20);\n"
"background-color:rgb(98, 114, 164);\n"
"padding-left:10px;\n"
"padding-right:-10px;\n"
"\n"
"}\n"
"\n"
"QPlainTextEdit{\n"
"border: None;\n"
"color:rgb(98, 114, 164);\n"
"}\n"
"\n"
"\n"
"QFileDialog{\n"
"background-color:rgb(30,30,30);\n"
"border: 0px;\n"
"color: rgb(98,114,164);\n"
"}\n"
"\n"
"QTextEdit{\n"
"color: rgb(98, 114, 164);\n"
"border: None;\n"
"}\n"
"\n"
"QProgressBar {\n"
"    \n"
"    /*background-color: rgb(98, 114, 164);*/\n"
"    background-color: rgb(20,20,20);\n"
"    color: rgb(200, 200, 200);\n"
"    border-style: none;\n"
"    border-radius: 10px;\n"
"    text-align: center;\n"
"}\n"
"QProgressBar::chunk{\n"
"    border-radius: 10px;\n"
"    /*background-color: qlineargradient(spread:pad, x1:0, y1:0.511364, x2:1, y2:0.523, stop:0 rgba(254, 121, 199, 255), stop:1 rgba(170, 85, 255, 255));*/\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(170, 85, 255, 255), stop:1 rgba(143,23,119,255));\n"
"}\n"
"\n"
"QTableWidget{\n"
"color:rgb(220,220,220);\n"
"\n"
"}\n"
"\n"
"QComboBox{\n"
"background-color: rgb(30,30,30);\n"
"color: rgb(143,23,119);\n"
"padding: 1px 18px 1px 3px;\n"
"selection-color: rgb(98, 114, 164);\n"
"padding: 1px 0px 1px 3px\n"
"\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"color: rgb(220,220,220);\n"
"border-color:white;\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    border: 2px solid rgb(30,30,30);\n"
"    color: rgb(220,220,220);\n"
"    border-radius: 0px;\n"
"    selection-background-color: rgb(70,70,70);\n"
"    selection-color: rgb(70,70,70);\n"
"    backround-color: rgb(70,70,70);\n"
"}\n"
"\n"
"\n"
"QSpinBox {\n"
"background-color: rgb(30,30,30);\n"
"color: rgb(220,220,220);\n"
"/*border: 2px solid rgb(98, 114, 164);*/\n"
"border: None;\n"
"\n"
"}")
        self.centralwidget = QtWidgets.QWidget(AnyPlotter)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 0, 0, 1, 1)
        self.spinBox_rows = QtWidgets.QSpinBox(self.frame)
        self.spinBox_rows.setMaximum(99999)
        self.spinBox_rows.setProperty("value", 10)
        self.spinBox_rows.setObjectName("spinBox_rows")
        self.gridLayout_2.addWidget(self.spinBox_rows, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 0, 2, 1, 1)
        self.spinBox_columns = QtWidgets.QSpinBox(self.frame)
        self.spinBox_columns.setMaximum(99999)
        self.spinBox_columns.setProperty("value", 10)
        self.spinBox_columns.setObjectName("spinBox_columns")
        self.gridLayout_2.addWidget(self.spinBox_columns, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 4, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.frame)
        self.tableWidget.setRowCount(10)
        self.tableWidget.setColumnCount(10)
        self.tableWidget.setObjectName("tableWidget")
        self.gridLayout_3.addWidget(self.tableWidget, 1, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 0, 1, 1)
        self.plot_type = QtWidgets.QComboBox(self.frame)
        self.plot_type.setMinimumSize(QtCore.QSize(150, 0))
        self.plot_type.setObjectName("plot_type")
        self.plot_type.addItem("")
        self.plot_type.addItem("")
        self.gridLayout.addWidget(self.plot_type, 0, 1, 1, 1)
        self.button_plot = QtWidgets.QPushButton(self.frame)
        self.button_plot.setObjectName("button_plot")
        self.gridLayout.addWidget(self.button_plot, 0, 2, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 2, 0, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout_3)
        self.verticalLayout.addWidget(self.frame)
        AnyPlotter.setCentralWidget(self.centralwidget)

        self.retranslateUi(AnyPlotter)
        QtCore.QMetaObject.connectSlotsByName(AnyPlotter)

    def retranslateUi(self, AnyPlotter):
        _translate = QtCore.QCoreApplication.translate
        AnyPlotter.setWindowTitle(_translate("AnyPlotter", "MainWindow"))
        self.label_3.setText(_translate("AnyPlotter", "Rows"))
        self.label_2.setText(_translate("AnyPlotter", "Columns:"))
        self.plot_type.setItemText(0, _translate("AnyPlotter", "Energy diagram"))
        self.plot_type.setItemText(1, _translate("AnyPlotter", "Line"))
        self.button_plot.setText(_translate("AnyPlotter", "Plot"))
